# Node.js & npm/yarn
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json # If you exclusively use yarn.lock
# yarn.lock # If you exclusively use package-lock.json (choose one or neither if you use both intentionally)

# Yarn Berry
# Cache and artifacts, but keep configuration and necessary packages/plugins
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions
.pnp.*

# TypeScript
# Compiled JavaScript files and declaration files
dist/
*.js # If your source is purely .ts and .js files in src/ are build artifacts
*.js.map # Source maps
*.d.ts # Declaration files (if generated next to source, or in dist/)
# TypeScript build info file
*.tsbuildinfo

# Linting cache
.eslintcache

# n8n specific (usually n8n stores data in ~/.n8n, but just in case)
.n8n/
*.db # If any local SQLite databases are generated in the project for testing

# IDE / Editor specific
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.idea/ # For JetBrains IDEs

# Operating System files
.DS_Store # macOS
Thumbs.db # Windows
ehthumbs.db # Windows
Desktop.ini # Windows

# Log files
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory
coverage/
.nyc_output/

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*.local

# Optional: Compiled output from other tools
# .parcel-cache/ # Uncomment if you use Parcel
.cache/

# Optional: Test reports
# junit.xml # Uncomment if you generate JUnit XML reports
test-results/

# Optional: If you bundle your nodes for distribution
*.tgz
*.n8n.zip

reclaim-api.yml